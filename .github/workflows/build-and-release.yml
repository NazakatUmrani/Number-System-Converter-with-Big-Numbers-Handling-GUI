name: Build and Package Number System Converter GUI

on:
  push:
  #   tags:
  #     - '*'

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Install Qt using jurplel/install-qt-action
        uses: jurplel/install-qt-action@v4.1.1
        with:
          version: '5.15.2'  # You can specify the Qt version you need
          host: 'linux'

      - name: Manually Install linuxdeployqt with fuse
        run: |
          # Download the linuxdeployqt AppImage
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          
          # Make the AppImage executable
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          
          # Move the AppImage to a directory in PATH (optional)
          sudo mv linuxdeployqt-continuous-x86_64.AppImage /usr/local/bin/linuxdeployqt.AppImage
          
          # Install Fuse and libfuse
          sudo apt-get install fuse libfuse2

      - name: Create Build Folder
        run: mkdir build && cd build

      - name: Build Project with qmake and make
        run: |
          cd build
          qmake ..
          make -j$(nproc)  # Adjust parallel jobs based on the number of CPU cores
          
      - name: Create Desktop File
        run: |
          cd build
          mkdir -p AppDir/usr/share/applications
          cat > AppDir/usr/share/applications/NumberSystemConverterGUI.desktop <<EOF
          [Desktop Entry]
          Name=Number System Converter GUI
          Exec=NumberSystemConverterGUI
          Icon=NumberSystemConverterGUI
          Type=Application
          Categories=Utility;
          EOF

      # Uncomment the line below when you're ready to deploy based on tags
      # - name: Extract Version from Tag (if any)
      #   id: version-extract
      #   run: |
      #     VERSION=${GITHUB_REF#refs/tags/}
      #     echo "Extracted version: $VERSION"
      #     echo "VERSION=$VERSION" >> $GITHUB_ENV
  
      # Static version used for testing (you can remove this once you switch to tags)
      - name: Set Version
        run: echo "VERSION=1.0.0" >> $GITHUB_ENV
    
      - name: List Build Directory Contents
        run: ls -l build

      - name: Package Linux App with linuxdeployqt
        run: |
          cd build
          mkdir -p AppDir/usr/bin
          cp NumberSystemConverterGUI AppDir/usr/bin/
          /usr/local/bin/linuxdeployqt.AppImage AppDir/usr/share/applications/NumberSystemConverterGUI.desktop -appimage

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: Linux-AppImage
          path: build/NumberSystemConverterGUI*.AppImage

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Install Qt using jurplel/install-qt-action
        uses: jurplel/install-qt-action@v4.1.1
        with:
          version: '5.15.2'
          host: 'windows'

      - name: Manually Install MinGW
        run: |
          # Download MinGW
          curl -L -o mingw.7z https://github.com/niXman/mingw-builds-binaries/releases/download/13.2.0-rt_v11-rev0/x86_64-13.2.0-release-posix-seh-ucrt-rt_v11-rev0.7z
          # Create installation directory
          mkdir C:\mingw
          # Extract MinGW
          7z x mingw.7z -oC:\mingw
          # Add MinGW to PATH
          echo "C:\mingw\bin" >> $env:GITHUB_PATH
    
      - name: Create Build Folder
        run: mkdir build

      - name: Build Project with qmake and mingw32-make
        run: |
          cd build
          qmake -spec win32-g++ ..
          mingw32-make
  
      - name: Debug Build Directory
        run: ls -l build

      - name: Package Windows App with windeployqt
        run: |
          cd build
          "C:\Qt\5.15.2\mingw81_64\bin\windeployqt.exe" "NumberSystemConverterGUI.exe"

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: Windows-Executable
          path: build/"Number System Converter GUI.exe"

  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Install Qt using jurplel/install-qt-action
        uses: jurplel/install-qt-action@v4.1.1
        with:
          version: '5.15.2'  # You can specify the Qt version you need
          host: 'mac'

      - name: Create Build Folder
        run: mkdir build && cd build

      - name: Build Project with qmake and make
        run: |
          cd build
          qmake ..
          make -j$(sysctl -n hw.ncpu)  # Automatically use all CPU cores
          ls

      - name: Package macOS App
        run: |
          cd build
          ls
          macdeployqt "NumberSystemConverterGUI.app"

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: macOS-App
          path: build/"NumberSystemConverterGUI.app"

  upload-release:
    name: Upload All Artifacts to Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Create GitHub Release
        id: create_release
        uses: gh actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Release for version ${{ github.ref }}"

      - name: Upload Linux Artifact to GitHub Release
        uses: gh actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/Number\ System\ Converter\ GUI*.AppImage
          asset_name: "Number System Converter GUI-linux-${{ github.ref }}.AppImage"
          asset_content_type: application/vnd.appimage

      - name: Upload Windows Artifact to GitHub Release
        uses: gh actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/"Number System Converter GUI.exe"
          asset_name: "Number System Converter GUI-windows-${{ github.ref }}.exe"
          asset_content_type: application/octet-stream

      - name: Upload macOS Artifact to GitHub Release
        uses: gh actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/"Number System Converter GUI.app"
          asset_name: "Number System Converter GUI-macos-${{ github.ref }}.app"
          asset_content_type: application/octet-stream
